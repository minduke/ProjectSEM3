
@{
    ViewBag.Title = "EditDetail";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var post = ViewBag.EditPost as GiveAID.Models.entities.post;

    List<GiveAID.Models.entities.category> categories = new List<GiveAID.Models.entities.category>();
    if (ViewBag.cate != null)
    {
        categories = ViewBag.cate;
    }

    List<GiveAID.Models.entities.partner> partners = new List<GiveAID.Models.entities.partner>();
    if (ViewBag.partner != null)
    {
        partners = ViewBag.partner;
    }

    //bool isEditPost = ViewBag.IsEditPost ?? false;
}

@section scripts{
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script type="text/javascript">
        CKEDITOR.replace('comment');

        $(document).ready(function (e) {
            $('#comment').val($('#MoTa').val());

            $('#btnSubmit').click(function (e) {
                e.preventDefault();
                var data = CKEDITOR.instances['comment'].getData();
                $('#MoTa').val(data);

                $('#formEditPost').submit();
            });
        });


        function previewThumbnail(event) {

            var input = event.target;
            var imagesPreview = document.getElementById('thumb');
            imagesPreview.innerHTML = ''; // Clear any previous images

            if (input.files) {
                var filesAmount = input.files.length;

                for (let i = 0; i < filesAmount; i++) {
                    let file = input.files[i];
                    let reader = new FileReader();

                    reader.onload = function (e) {
                        let imgContainer = document.createElement('div');
                        imgContainer.style.position = 'relative';
                        imgContainer.style.display = 'inline-block';
                        imgContainer.style.marginRight = '10px';
                        imgContainer.style.marginBottom = '10px';

                        let img = document.createElement('img');
                        img.src = e.target.result;
                        img.style.maxWidth = '200px';
                        img.style.maxHeight = '200px';

                        let removeButton = document.createElement('button');
                        removeButton.innerHTML = 'X';
                        removeButton.style.position = 'absolute';
                        removeButton.style.top = '5px';
                        removeButton.style.right = '5px';
                        removeButton.style.backgroundColor = 'red';
                        removeButton.style.color = 'white';
                        removeButton.style.border = 'none';
                        removeButton.style.borderRadius = '50%';
                        removeButton.style.cursor = 'pointer';

                        removeButton.onclick = function () {
                            imgContainer.remove();
                            // Remove the file from the input element
                            var dt = new DataTransfer();
                            for (var j = 0; j < input.files.length; j++) {
                                if (input.files[j] !== file) {
                                    dt.items.add(input.files[j]);
                                }
                            }
                            input.files = dt.files;
                        };

                        imgContainer.appendChild(img);
                        imgContainer.appendChild(removeButton);
                        imagesPreview.appendChild(imgContainer);
                    };

                    reader.readAsDataURL(file);
                }
            }
        }


        function previewImages(event) {
            var input = event.target;
            var imagesPreview = document.getElementById('imagesPreview');
            imagesPreview.innerHTML = ''; // Clear any previous images

            if (input.files) {
                var filesAmount = input.files.length;

                for (let i = 0; i < filesAmount; i++) {
                    let file = input.files[i];
                    let reader = new FileReader();

                    reader.onload = function (e) {
                        let imgContainer = document.createElement('div');
                        imgContainer.style.position = 'relative';
                        imgContainer.style.display = 'inline-block';
                        imgContainer.style.marginRight = '10px';
                        imgContainer.style.marginBottom = '10px';

                        let img = document.createElement('img');
                        img.src = e.target.result;
                        img.style.maxWidth = '150px';
                        img.style.maxHeight = '150px';

                        let removeButton = document.createElement('button');
                        removeButton.innerHTML = 'X';
                        removeButton.style.position = 'absolute';
                        removeButton.style.top = '5px';
                        removeButton.style.right = '5px';
                        removeButton.style.backgroundColor = 'red';
                        removeButton.style.color = 'white';
                        removeButton.style.border = 'none';
                        removeButton.style.borderRadius = '50%';
                        removeButton.style.cursor = 'pointer';

                        removeButton.onclick = function () {
                            imgContainer.remove();
                            // Remove the file from the input element
                            var dt = new DataTransfer();
                            for (var j = 0; j < input.files.length; j++) {
                                if (input.files[j] !== file) {
                                    dt.items.add(input.files[j]);
                                }
                            };
                            input.files = dt.files;
                        };

                        imgContainer.appendChild(img);
                        imgContainer.appendChild(removeButton);
                        imagesPreview.appendChild(imgContainer);
                    };

                    reader.readAsDataURL(file);
                }
            }
        }

        var idPost = document.getElementById('id');

        function deleteThumb(idPost) {
            if (confirm("Bạn có chắc muốn xoá ảnh này không ?!")) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteThumb", "Admin")',
                    data: { id: idPost },
                    success: function (response) {
                        if (response.result == true) {
                            showSuccessMessage("Xoá ảnh nền thành công");
                            document.getElementById('imageId').remove();
                        } else {
                            showErrorMessage(response.error);
                        }
                    },
                    error: handleException
                });
            }
        }


        function deleteImage(imageId) {
            if (confirm("Bạn có chắc muốn xoá ảnh này không ?!")) {
                $.ajax({
                    url: '@Url.Action("DeleteImage", "Admin")',
                    type: 'POST',
                    data: { id: imageId },
                    success: function (response) {
                        if (response.result) {
                            showSuccessMessage("Xoá ảnh thành công");
                            document.querySelector(`button[onclick="deleteImage(${imageId})"]`).parentElement.remove();
                        } else {
                            showErrorMessage(response.error);
                        }
                    },
                    error: handleException
                });
            }
        }


        function doEditPost() {
            var dt = document.getElementById('formEditPost');
            var form = new FormData(dt);
            debugger
            $.ajax({
                type: 'POST',
                url: '@Url.Content(ViewBag.IsEditPost == true ? "~/Admin/DoEditPost" : "~/Admin/SubmitNews")',
                data: form,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.result == true) {

                        location.reload();
                    }
                    else {

                        showErrorMessage(response.error);
                    }
                },
                error: handleException
            });
        }

        // label chosefile for thumbnail
        $("#thumbnail").change(function () {
            filename = this.files[0].name;
            $(".filename-container").text(filename);
        });

        // label chosefile for fileBase
        $("#fileBase").change(function () {
            filename = this.files[0].name;
            $(".filename-contain").text(filename);
        });



    </script>
}

<style>

    .custom-Button {
        position: relative;
        left: 123px;
        bottom: 145px;
        display: flex;
        background-color: transparent;
        border: none;
        padding: 0;
        width: 50px;
        height: 50px;
    }

        .custom-Button i {
            width: fit-content;
            height: auto;
            color: red;
            font-size: 20px;
        }

            .custom-Button i:hover {
                color: hotpink; /* Màu sắc khi hover */
            }

    .custom-Button2 {
        position: relative;
        left: 123px;
        bottom: 145px;
        display: flex;
        background-color: transparent;
        border: none;
        padding: 0;
        width: 50px;
        height: 50px;
    }

        .custom-Button2 i {
            width: fit-content;
            height: auto;
            color: red;
            font-size: 20px;
        }

            .custom-Button2 i:hover {
                color: hotpink; /* Màu sắc khi hover */
            }




    .form-control {
        /*cho sua tieu de*/
        height: 50px;
        width: 700px;
    }



    input[type="file"] {
        visibility: hidden;
        /*an nut mac dinh di*/
    }

    .filename-container.placeholder {
        color: #999; /*thumbnail*/
        font-style: italic;
    }

    .filename-contain.placeholder {
        color: #999; /*fileBase*/
        font-style: italic;
    }

    .cusFILE {
        /*custom nut chon file*/
        padding: 10px 20px;
        background-color: #f1f1f1;
        color: #333;
        border-radius: 4px;
        border: 1px solid #ccc;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .cusFILE:hover {
            background-color: hotpink;
        }

    hr.new4 {
        border: 1px solid hotpink;
    }
</style>
<div class="content-wrapper">

    <div class="card-header">
        
        @{
            if (ViewBag.IsEditPost == true)
            {
                <h4 class="card-title">Edit Detail</h4>
            }
            else
            {
                  <h4 class="card-title">Create Posts</h4>
            }

        }
    </div>
    <!-- /.card-header -->
    <!--Load GIF-->
    <div class="modalLoading"></div>



    <!-- form start -->
    <form id="formEditPost" action="javascript:doEditPost();" method="post" enctype="multipart/form-data">
        <div class="card-body mx-auto">
            <div class="form-group">
                <label for="Tiêu Đề"><h1>Title</h1></label>
                <input type="text" class="form-control" id="title" name="title" placeholder="Title" required value="@post.title">
            </div>

            <input type="hidden" name="id" id="id" value="@post.id" />
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-4">
                        <label for="fileBase"><h1>Background</h1></label>

                        <div class="" id="imageId">
                            <img src="~/Content/Images/post/@post.image" alt="chưa có ảnh" width="150px" height="150px" />
                            <button class="custom-Button" type="button" onclick="deleteThumb(@post.id)"><i class="fa-solid fa-delete-left"></i></button>
                        </div>
                        <!-- choose file img-->
                        <label for="thumbnail" class="cusFILE"><i class="fa-solid fa-upload mr-1"></i>Choose File</label>
                        
                        <input type="file" class="form-control" id="thumbnail" name="thumbnail" onchange="previewThumbnail(event);">
                    </div>

                    <div class="col-sm-7">
                        <!-- view file img-->
                        <div class="viewBefore">
                            <label for="thumb"><h1>Preview</h1></label>
                            <div id="thumb"></div>
                        </div>
                    </div>

                </div>
            </div>



            <div class="form-group">
                <div class="row">
                    <div class="col-sm-12">
                        <hr class="new4">
                        <label for="fileBase"><h1>Related images</h1></label>
                        <div class="row">
                            @foreach (var item in post.image_post)
                            {
                                <div class="col-sm-2">
                                    <img src="~/Content/Images/post/@item.image" alt="" width="150px" height="150px">
                                    <button class="custom-Button2" type="button" onclick="deleteImage(@item.id)"><i class="fa-solid fa-delete-left"></i></button>
                                </div>
                            }
                        </div>


                        <!-- choose file img-->
                        <label for="fileBase" class="cusFILE mt-2"><i class="fa-solid fa-upload mr-1"></i>Choose File</label>
                        
                        <input type="file" class="form-control" id="fileBase" name="fileBase" multiple onchange="previewImages(event);">

                    </div>

                    <div class="col-sm-12">
                        <!-- view file img-->
                        <label for="imagesPreview"><h2>Preview</h2></label>
                        <div class="row">
                            <div class="col-sm-12">
                                <div id="imagesPreview"></div>
                            </div>
                        </div>


                    </div>

                </div>


            </div>

            <input type="hidden" id="time_start" name="time_start" value="" />
            <hr class="new4">
            @*<input type="hidden" name="TrangThai" value="Mở" />*@

            <div class="form-group">
                <label for="target"><h3>Target amount</h3></label>
                <input type="number" class="form-control" id="target" name="target" placeholder="" value="@Convert.ToInt64(post.target)" required>
            </div>

            <div class="form-group">
                <label for="content"><h3>Content</h3></label>
                <textarea class="form-control" rows="5" id="comment" name="comment"></textarea>
            </div>

            <div>
                <input type="hidden" name="content" id="MoTa" value="@post.content" />
            </div>


            <div class="form-group">
                <label><h3>Field</h3></label>
                <select class="form-control" id="sel1" name="cate_id">

                    @foreach (var item in categories)
                    {
                        <option value="@item.cate_id">@item.name</option>
                    }

                </select>
            </div>

            <div class="form-group">
                <label>Partner</label>
                <select class="form-control" id="sel1" name="partner_id">

                    @foreach (var item in partners)
                    {
                        <option value="@item.id" @(post.partner_id == item.id ? "selected" : "")>@item.partner_name</option>
                    }

                </select>
            </div>

            <div class="form-group">
                <label for="time_end"><h3>Donation end date</h3></label>
                <input type="date" class="form-control" id="time_end" name="time_end" value="@(post.time_end.HasValue ? post.time_end.Value.ToString("yyyy-MM-dd") : "") " required>
            </div>


        </div>
        <!-- /.card-body -->

        <div class="card-footer">
            <button type="submit" id="btnSubmit" class="btn btn-primary" value="Save">Save</button>
        </div>
    </form>
</div>
<!-- /.card -->
